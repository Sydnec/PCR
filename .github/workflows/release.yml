name: 📦 Release et Changelog PCR

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    name: 🚀 Create Release and Deploy Changelog
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📋 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build and prepare
        run: |
          echo "🏗️ Préparation de la release..."
          npm audit fix --force || true
          
      - name: 📝 Extract version and prepare release notes
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "🏷️ Version détectée: $VERSION"
          
          # Générer les notes de release depuis changelog.json
          if [ -f "changelog.json" ]; then
            echo "📋 Génération des notes depuis changelog.json..."
            node -e "
              const fs = require('fs');
              try {
                const changelog = JSON.parse(fs.readFileSync('changelog.json', 'utf8'));
                const release = changelog.releases.find(r => r.version === '$VERSION');
                
                if (release) {
                  let notes = \`## 🎉 \${release.title || 'Release ' + release.version}\\n\\n\`;
                  
                  if (release.features && release.features.length > 0) {
                    const featuresByType = release.features.reduce((acc, f) => {
                      if (!acc[f.type]) acc[f.type] = [];
                      acc[f.type].push(f);
                      return acc;
                    }, {});
                    
                    Object.entries(featuresByType).forEach(([type, features]) => {
                      const typeTitle = {
                        'command': '⚡ Nouvelles Commandes',
                        'event': '🎯 Nouveaux Événements', 
                        'feature': '✨ Nouvelles Fonctionnalités',
                        'fix': '🐛 Corrections',
                        'enhancement': '🔧 Améliorations'
                      }[type] || '📋 Autres';
                      
                      notes += \`### \${typeTitle}\\n\\n\`;
                      features.forEach(f => {
                        notes += \`- **\${f.name}**: \${f.description}\`;
                        if (f.author) notes += \` (par \${f.author})\`;
                        notes += \`\\n\`;
                      });
                      notes += \`\\n\`;
                    });
                  }
                  
                  notes += \`### 🚀 Installation rapide\\n\\n\`;
                  notes += \`\\\`\\\`\\\`bash\\n\`;
                  notes += \`git clone https://github.com/sydnec/PCR.git\\n\`;
                  notes += \`cd PCR\\n\`;
                  notes += \`./pcr deploy\\n\`;
                  notes += \`\\\`\\\`\\\`\\n\`;
                  
                  fs.writeFileSync('RELEASE_NOTES.md', notes);
                  console.log('✅ Notes de release générées depuis changelog.json');
                } else {
                  throw new Error('Release non trouvée dans changelog.json');
                }
              } catch (error) {
                console.log('⚠️ Erreur avec changelog.json, utilisation du fallback:', error.message);
                const fallback = \`## 🎉 PCR Bot v\${process.env.VERSION}\\n\\nNouvelle version du bot Discord PCR.\\n\\n### 🚀 Installation\\n\\n\\\`\\\`\\\`bash\\ngit clone https://github.com/sydnec/PCR.git\\ncd PCR\\n./pcr deploy\\n\\\`\\\`\\\`\`;
                require('fs').writeFileSync('RELEASE_NOTES.md', fallback);
              }
            "
          else
            echo "⚠️ changelog.json non trouvé, génération de notes basiques..."
            cat > RELEASE_NOTES.md << EOF
          ## 🎉 PCR Bot v$VERSION
          
          Nouvelle version du bot Discord PCR.
          
          ### 🚀 Installation rapide
          
          \`\`\`bash
          git clone https://github.com/sydnec/PCR.git
          cd PCR
          ./pcr deploy
          \`\`\`
          EOF
          fi
          
      - name: 📦 Create Release Archive
        run: |
          echo "📦 Création de l'archive de release..."
          # Créer un répertoire temporaire pour l'archive
          mkdir -p /tmp/pcr-release
          
          # Copier les fichiers nécessaires en excluant les répertoires/fichiers indésirables
          rsync -av --progress \
            --exclude='.git/' \
            --exclude='node_modules/' \
            --exclude='.github/' \
            --exclude='backups/' \
            --exclude='logs/' \
            --exclude='*.db' \
            --exclude='.env' \
            --exclude='*.tar.gz' \
            --exclude='/tmp/' \
            ./ /tmp/pcr-release/
          
          # Créer l'archive depuis le répertoire temporaire
          cd /tmp
          tar -czf pcr-bot-v${{ steps.version.outputs.VERSION }}.tar.gz pcr-release/
          
          # Déplacer l'archive vers le répertoire de travail
          mv pcr-bot-v${{ steps.version.outputs.VERSION }}.tar.gz $GITHUB_WORKSPACE/
          
          # Nettoyer le répertoire temporaire
          rm -rf /tmp/pcr-release
          
          echo "✅ Archive créée: pcr-bot-v${{ steps.version.outputs.VERSION }}.tar.gz"
            
      - name: 🚀 Create GitHub Release
        id: create_release
        run: |
          echo "🚀 Création de la release GitHub..."
          
          # Créer la release avec GitHub CLI
          gh release create "v${{ steps.version.outputs.VERSION }}" \
            --title "🤖 PCR Bot v${{ steps.version.outputs.VERSION }}" \
            --notes-file RELEASE_NOTES.md \
            --target main \
            ./pcr-bot-v${{ steps.version.outputs.VERSION }}.tar.gz
          
          echo "✅ Release v${{ steps.version.outputs.VERSION }} créée avec succès"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Release Summary
        if: success()
        run: |
          echo "🎉 Release v${{ steps.version.outputs.VERSION }} créée avec succès !"
          echo ""
          echo "📋 Résumé:"
          echo "  • Version: ${{ steps.version.outputs.VERSION }}"
          echo "  • Tag: v${{ steps.version.outputs.VERSION }}"
          echo "  • Archive: pcr-bot-v${{ steps.version.outputs.VERSION }}.tar.gz"
          echo "  • Release GitHub: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }}"
          echo ""
          echo "💡 Prochaines étapes:"
          echo "  • Le bot détectera automatiquement la nouvelle version au redémarrage"
          echo "  • Les notifications Discord seront envoyées par le bot (pour minor/major uniquement)"
          echo "  • Les utilisateurs peuvent maintenant télécharger la nouvelle version"
          echo "  • Le changelog est automatiquement publié"
